---
- name: Validate mandatory variables are defined
  assert:
    that:
      - cloud_platform is defined

- name: Validate cloud_platform is implemented
  fail: msg="cloud_platform {{ cloud_platform }} is not implemented, current implemented cloud platforms are {{ implemented_cloud_platform_types }} "
  when: "cloud_platform not in implemented_cloud_platform_types"

- name: Get aws-access-key secret from in the vault
  include_role: 
    name: vault-get-secret
  vars:
    secret_name: "aws-access-key"
    secret_group: "{{ environment_name }}" 

- set_fact:
    _aws_access_key: "{{ secret_value }}"

- name: Get aws-secret-access-key secret from the vault
  include_role: 
    name: vault-get-secret
  vars:
    secret_name: "aws-secret-access-key"
    secret_group: "{{ environment_name }}" 

- set_fact:
    _aws_secret_access_key: "{{ secret_value }}"

- name:  Get ocp-pullsecret secret from the vault
  block:
  - name: Read ocp-pullsecret secret from the vault
    include_role: 
      name: vault-get-secret
    vars:
      secret_name: "ocp-pullsecret"
      secret_group: "{{ environment_name }}" 

  - set_fact:
      _ocp_pullsecret: "{{ secret_value }}"
  when: _use_rosa_to_setup_openshift is not defined

- name: Provision Managed OpenShift on AWS
  block:
  - name: Download ROSA command line tool 
    include_role:
      name: aws-download-rosa  

  - name: Login to ROSA
    include_role:
      name: aws-login-rosa

  - name: Provision OpenShift on AWS
    include_tasks: provision-rosa.yml
    loop: "{{ all_config.openshift | default([]) }}"
    loop_control:
      loop_var: _current_openshift_cluster
  when: _use_rosa_to_setup_openshift is defined and _use_rosa_to_setup_openshift == True

- name: Provision Self-Managed OpenShift on AWS 
  include_tasks: provision-self-managed.yml
  loop: "{{ all_config.openshift | default([]) }}"
  loop_control:
    loop_var: _current_openshift_cluster
  when: _current_openshift_cluster.infrastructure.type == "self-managed"

- name: Configure file storage on AWS
  include_tasks: aws-file-server.yaml
  loop: "{{ all_config.nfs_server | default([]) }}"
  loop_control:
    loop_var: _current_nfs_server