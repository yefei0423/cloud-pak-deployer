---
- name: Check if aws-access-key secret is in the vault
  include_role: 
    name: vault-get-secret
  vars:
    secret_name: "aws-access-key"
    secret_group: "{{ environment_name }}" 

- name: Check that aws-access-key secret is present in the vault
  fail:
    msg: "Secret aws-access-key is mandatory and was not found in the vault"
  when: secret_value==""

- name: Check if aws-secret-access-key secret is in the vault
  include_role: 
    name: vault-get-secret
  vars:
    secret_name: "aws-secret-access-key"
    secret_group: "{{ environment_name }}" 

- name: Check that aws-secret-access-key secret is present in the vault
  fail:
    msg: "Secret aws-secret-access-key is mandatory and was not found in the vault"
  when: secret_value==""

- name: Check if need to check rosa-login-token secret
  set_fact:
    _use_rosa_to_setup_openshift: True  
  loop: "{{ all_config.openshift | default([]) }}"
  loop_control:
    loop_var: _current_openshift_cluster
  when: _current_openshift_cluster.infrastructure.type == "rosa"
  
- name: Check rosa-login-token secret for rosa
  block:
  - name: Check if rosa-login-token secret is in the vault
    include_role: 
      name: vault-get-secret
    vars:
      secret_name: "rosa-login-token"
      secret_group: "{{ environment_name }}"

  - name: Check that rosa-login-token secret is present in the vault
    fail:
      msg: "Secret rosa-login-token is mandatory and was not found in the vault"
    when: secret_value==""
  when: _use_rosa_to_setup_openshift is defined and _use_rosa_to_setup_openshift == True
  
- name: Check ocp-pullsecret secret for self-managed openshift
  block:
  - name: Check if ocp-pullsecret secret is in the vault
    include_role: 
      name: vault-get-secret
    vars:
      secret_name: "ocp-pullsecret"
      secret_group: "{{ environment_name }}"

  - name: Check that ocp-pullsecret secret is present in the vault
    fail:
      msg: "Secret ocp-pullsecret is mandatory and was not found in the vault"
    when: secret_value==""
  when: _use_rosa_to_setup_openshift is not defined

- name: Check base_domain in present in openshift config
  fail:
    msg: "base_domain is mandatory and was not found in the openshift config"
  when: _current_openshift_cluster.infrastructure.type == "self-managed" and (_current_openshift_cluster.base_domain is not defined or _current_openshift_cluster.base_domain =="")
  loop: "{{ all_config.openshift | default([]) }}"
  loop_control:
    loop_var: _current_openshift_cluster
